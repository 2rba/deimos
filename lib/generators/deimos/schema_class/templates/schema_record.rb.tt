  # Autogenerated Schema for Record at <%= @current_schema.namespace %>.<%= @current_schema.name %>
  class <%= Deimos::SchemaBackends::AvroBase.schema_classname(@current_schema) %> < Deimos::SchemaClass::Record
<%- if @field_assignments.select{ |h| h[:is_schema_class] }.any? -%>
    ### Attribute Readers ###
  <%- @field_assignments.select{ |h| h[:is_schema_class] }.each do |method_definition| -%>
    # @return [<%= method_definition[:deimos_type] %>]
    attr_reader :<%= method_definition[:field].name %>
  <%- end -%>

<% end -%>
<%- if @field_assignments.select{ |h| !h[:is_schema_class] }.any? -%>
    ### Attribute Accessors ###
  <%- @field_assignments.select{ |h| !h[:is_schema_class] }.each do |method_definition| -%>
    # @param <%= method_definition[:method_argument] %> [<%= method_definition[:deimos_type] %>]
    attr_accessor :<%= method_definition[:field].name %>
  <%- end -%>

<% end -%>
<%- if @field_assignments.select{ |h| h[:is_schema_class] }.any? -%>
    ### Attribute Writers ###
  <%- @field_assignments.select{ |h| h[:is_schema_class] }.each do |method_definition| -%>
    # @param <%= method_definition[:method_argument] %> [<%= method_definition[:deimos_type] %>]
    def <%= method_definition[:field].name %>=(<%= method_definition[:method_argument] %>)
    <%- if method_definition[:field_type] == :array -%>
      @<%= method_definition[:field].name %> = values.map do |value|
        <%= method_definition[:field_initialization] %>
      end
    <%- elsif method_definition[:field_type] == :map -%>
      @<%= method_definition[:field].name %> = values.transform_values do |value|
        <%= method_definition[:field_initialization] %>
      end
    <%- else -%>
      @<%= method_definition[:field].name %> = <%= method_definition[:field_initialization] %>
    <%- end -%>
    end

  <%- end -%>
<% end -%>
    # @override
    <%= @initialization_definition %>
      super
<%- @fields.each do |field| -%>
      self.<%= field.name %> = <%= field.name %>
<% end -%>
    end

    # @override
    def schema
      '<%= @current_schema.name %>'
    end

    # @override
    def namespace
      '<%= @current_schema.namespace %>'
    end

    # @override
    def to_h
      {
<%- @fields.each do |field| -%>
        <%= field_to_h(field) %>
<% end -%>
      }
    end
  end
