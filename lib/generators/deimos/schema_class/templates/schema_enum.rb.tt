# frozen_string_literal: true

module Deimos
  # :nodoc:
  class <%= schema_classname(@current_schema) %> < SchemaEnum
    # @return [<%= enum_return_values(@current_schema) %>]
    attr_accessor :<%= @current_schema.name.underscore %>

    # :nodoc:
    def initialize(<%= @current_schema.name.underscore %>:)
      super()
      @<%= @current_schema.name.underscore %> = <%= @current_schema.name.underscore %>
    end

    # :nodoc:
    def self.initialize_from_value(value)
      self.new(@<%= @current_schema.name.underscore %>: value)
    end

    # @override
    def symbols
      %w(<%= enum_symbols(@current_schema).join(' ') %>)
    end

    # @override
    def as_json(_options={})
      @<%= @current_schema.name.underscore %>
    end
  end
end
